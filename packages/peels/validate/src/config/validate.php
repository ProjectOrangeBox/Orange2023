<?php

return [
    'notationDelimiter' => '',
    'throwExceptionOnFailure' => false,
    'exceptionCode' => 406,

    'isTrue' => [1, '1', 'y', 'on', 'yes', 't', 'true', true],
    'isFalse' => [0, '0', 'n', 'off', 'no', 'f', 'false', false],

    'errorMsg' => '%s is not valid.',

    'ruleDelimiter' => '|',
    'optionLeftDelimiter' => '[',
    'optionRightDelimiter' => ']',
    'defaultOptionDelimiter' => ',',

    'rules' => [
        // --Cast
        'castArray' => \peels\validate\rules\Cast::class . '::array',
        'castBool' => \peels\validate\rules\Cast::class . '::bool',
        'castBoolean' => \peels\validate\rules\Cast::class . '::boolean',
        'castFloat' => \peels\validate\rules\Cast::class . '::float',
        'castInt' => \peels\validate\rules\Cast::class . '::int',
        'castInteger' => \peels\validate\rules\Cast::class . '::integer',
        'castNumber' => \peels\validate\rules\Cast::class . '::number',
        'castString' => \peels\validate\rules\Cast::class . '::string',

        // --Filters
        'toBase64' => \peels\validate\rules\Filters::class . '::base64',
        'toDate' => \peels\validate\rules\Filters::class . '::date',
        'toFilename' => \peels\validate\rules\Filters::class . '::filename',
        'toInteger' => \peels\validate\rules\Filters::class . '::integer',
        'toLength' => \peels\validate\rules\Filters::class . '::length',
        'toLower' => \peels\validate\rules\Filters::class . '::lower',
        'toMd5' => \peels\validate\rules\Filters::class . '::md5',
        'toNumber' => \peels\validate\rules\Filters::class . '::number',
        'toPasswordHash' => \peels\validate\rules\Filters::class . '::passwordHash',
        'toReadable' => \peels\validate\rules\Filters::class . '::readable',
        'toSha1' => \peels\validate\rules\Filters::class . '::sha1',
        'toSlug' => \peels\validate\rules\Filters::class . '::slug',
        'toUpper' => \peels\validate\rules\Filters::class . '::upper',
        'toVisible' => \peels\validate\rules\Filters::class . '::visible',

        // --Rules
        'allowEmpty' => \peels\validate\rules\Rules::class . '::allowEmpty',
        'convertDate' => \peels\validate\rules\Rules::class . '::convertDate',
        'copyField' => \peels\validate\rules\Rules::class . '::copyField',
        'deleteField' => \peels\validate\rules\Rules::class . '::deleteField',
        'differs' => \peels\validate\rules\Rules::class . '::differs',
        'filename' => \peels\validate\rules\Rules::class . '::filename',
        'human' => \peels\validate\rules\Rules::class . '::human',
        'ifEmpty' => \peels\validate\rules\Rules::class . '::ifEmpty',
        'input' => \peels\validate\rules\Rules::class . '::input',
        'integer' => \peels\validate\rules\Rules::class . '::integer',
        'isAlpha' => \peels\validate\rules\Rules::class . '::isAlpha',
        'isAlphaDash' => \peels\validate\rules\Rules::class . '::isAlphaDash',
        'isAlphaNumeric' => \peels\validate\rules\Rules::class . '::isAlphaNumeric',
        'isAlphaNumericDash' => \peels\validate\rules\Rules::class . '::isAlphaNumericDash',
        'isAlphaNumericSpace' => \peels\validate\rules\Rules::class . '::isAlphaNumericSpace',
        'isAlphaSpace' => \peels\validate\rules\Rules::class . '::isAlphaSpace',
        'isArray' => \peels\validate\rules\Rules::class . '::isArray',
        'isBool' => \peels\validate\rules\Rules::class . '::isBool',
        'isClass' => \peels\validate\rules\Rules::class . '::isClass',
        'isCount' => \peels\validate\rules\Rules::class . '::isCount',
        'isCountGreaterThan' => \peels\validate\rules\Rules::class . '::isCountGreaterThan',
        'isCountLessThan' => \peels\validate\rules\Rules::class . '::isCountLessThan',
        'isDecimal' => \peels\validate\rules\Rules::class . '::isDecimal',
        'isExactLength' => \peels\validate\rules\Rules::class . '::isExactLength',
        'isFloat' => \peels\validate\rules\Rules::class . '::isFloat',
        'isGreaterThan' => \peels\validate\rules\Rules::class . '::isGreaterThan',
        'isGreaterThanEqualTo' => \peels\validate\rules\Rules::class . '::isGreaterThanEqualTo',
        'isHex' => \peels\validate\rules\Rules::class . '::isHex',
        'isInteger' => \peels\validate\rules\Rules::class . '::isInteger',
        'isLessThan' => \peels\validate\rules\Rules::class . '::isLessThan',
        'isLessThanEqualTo' => \peels\validate\rules\Rules::class . '::isLessThanEqualTo',
        'isLowercase' => \peels\validate\rules\Rules::class . '::isLowercase',
        'isNatural' => \peels\validate\rules\Rules::class . '::isNatural',
        'isNaturalNoZero' => \peels\validate\rules\Rules::class . '::isNaturalNoZero',
        'isNumeric' => \peels\validate\rules\Rules::class . '::isNumeric',
        'isOneOf' => \peels\validate\rules\Rules::class . '::isOneOf',
        'isRegexMatch' => \peels\validate\rules\Rules::class . '::isRegexMatch',
        'isRequired' => \peels\validate\rules\Rules::class . '::isRequired',
        'isScalar' => \peels\validate\rules\Rules::class . '::isScalar',
        'isStdClass' => \peels\validate\rules\Rules::class . '::isStdClass',
        'isString' => \peels\validate\rules\Rules::class . '::isString',
        'isUnique' => \peels\validate\rules\Rules::class . '::isUnique',
        'isUppercase' => \peels\validate\rules\Rules::class . '::isUppercase',
        'isValidBase64' => \peels\validate\rules\Rules::class . '::isValidBase64',
        'isValidDate' => \peels\validate\rules\Rules::class . '::isValidDate',
        'isValidEmail' => \peels\validate\rules\Rules::class . '::isValidEmail',
        'isValidEmails' => \peels\validate\rules\Rules::class . '::isValidEmails',
        'isValidIP' => \peels\validate\rules\Rules::class . '::isValidIP',
        'isValidTimezone' => \peels\validate\rules\Rules::class . '::isValidTimezone',
        'isValidURL' => \peels\validate\rules\Rules::class . '::isValidURL',
        'isValidUuid' => \peels\validate\rules\Rules::class . '::isValidUuid',
        'length' => \peels\validate\rules\Rules::class . '::length',
        'matches' => \peels\validate\rules\Rules::class . '::matches',
        'maxLength' => \peels\validate\rules\Rules::class . '::maxLength',
        'minLength' => \peels\validate\rules\Rules::class . '::minLength',
        'moveField' => \peels\validate\rules\Rules::class . '::moveField',
        'notEmpty' => \peels\validate\rules\Rules::class . '::notEmpty',
        'number' => \peels\validate\rules\Rules::class . '::number',
        'passwordVerify' => \peels\validate\rules\Rules::class . '::passwordVerify',
        'readable' => \peels\validate\rules\Rules::class . '::readable',
        'str' => \peels\validate\rules\Rules::class . '::str',
        'strToLower' => \peels\validate\rules\Rules::class . '::strToLower',
        'strToUpper' => \peels\validate\rules\Rules::class . '::strToUpper',
        'textarea' => \peels\validate\rules\Rules::class . '::textarea',
        'trim' => \peels\validate\rules\Rules::class . '::trim',
        'visible' => \peels\validate\rules\Rules::class . '::visible',
        'isValidJson' => \peels\validate\rules\Rules::class . '::isValidJson',
    ],
];
